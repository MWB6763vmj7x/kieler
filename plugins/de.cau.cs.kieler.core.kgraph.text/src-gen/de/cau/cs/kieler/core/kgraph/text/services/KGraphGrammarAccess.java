/*
* generated by Xtext
*/

package de.cau.cs.kieler.core.kgraph.text.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import de.cau.cs.kieler.core.kgraph.text.krendering.services.KRenderingGrammarAccess;
import de.cau.cs.kieler.core.kgraph.text.klayoutdata.services.KLayoutDataGrammarAccess;

@Singleton
public class KGraphGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class KNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKNodeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPortsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPortsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPortsKPortParserRuleCall_3_2_0 = (RuleCall)cPortsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPortsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cPortsKPortParserRuleCall_3_3_1_0 = (RuleCall)cPortsAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDataKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDataAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDataKGraphDataParserRuleCall_4_2_0 = (RuleCall)cDataAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cDataAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cDataKGraphDataParserRuleCall_4_3_1_0 = (RuleCall)cDataAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLabelsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLabelsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLabelsKLabelParserRuleCall_5_2_0 = (RuleCall)cLabelsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cLabelsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cLabelsKLabelParserRuleCall_5_3_1_0 = (RuleCall)cLabelsAssignment_5_3_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cChildrenKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cChildrenAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cChildrenKNodeParserRuleCall_6_2_0 = (RuleCall)cChildrenAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cChildrenAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cChildrenKNodeParserRuleCall_6_3_1_0 = (RuleCall)cChildrenAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cOutgoingEdgesAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cOutgoingEdgesKEdgeParserRuleCall_8_0_0 = (RuleCall)cOutgoingEdgesAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final Keyword cCommaKeyword_8_1_0 = (Keyword)cGroup_8_1.eContents().get(0);
		private final Assignment cOutgoingEdgesAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cOutgoingEdgesKEdgeParserRuleCall_8_1_1_0 = (RuleCall)cOutgoingEdgesAssignment_8_1_1.eContents().get(0);
		
		//KNode: //    {KNode}
		////    'KNode'
		////    '{'
		////        ('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////        ('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
		////        ('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
		////        ('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
		////    '}';
		//	{KNode} "KNode" "{" ("ports" ":"? ports+=KPort (","? ports+=KPort)*)? ("data" ":"? data+=KGraphData (","?
		//	data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? ("children" ":"? children+=KNode (","?
		//	children+=KNode)*)? "}" (outgoingEdges+=KEdge (","? outgoingEdges+=KEdge)*)?;
		public ParserRule getRule() { return rule; }

		////    {KNode}
		////    'KNode'
		////    '{'
		////        ('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////        ('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
		////        ('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
		////        ('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
		////    '}';
		//{KNode} "KNode" "{" ("ports" ":"? ports+=KPort (","? ports+=KPort)*)? ("data" ":"? data+=KGraphData (","?
		//data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? ("children" ":"? children+=KNode (","?
		//children+=KNode)*)? "}" (outgoingEdges+=KEdge (","? outgoingEdges+=KEdge)*)?
		public Group getGroup() { return cGroup; }

		////    {KNode}
		////    'KNode'
		////    '{'
		////        ('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////        ('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
		////        ('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
		////        ('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
		////    '}';
		//{KNode}
		public Action getKNodeAction_0() { return cKNodeAction_0; }

		//"KNode"
		public Keyword getKNodeKeyword_1() { return cKNodeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("ports" ":"? ports+=KPort (","? ports+=KPort)*)?
		public Group getGroup_3() { return cGroup_3; }

		//"ports"
		public Keyword getPortsKeyword_3_0() { return cPortsKeyword_3_0; }

		//":"?
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//ports+=KPort
		public Assignment getPortsAssignment_3_2() { return cPortsAssignment_3_2; }

		//KPort
		public RuleCall getPortsKPortParserRuleCall_3_2_0() { return cPortsKPortParserRuleCall_3_2_0; }

		//(","? ports+=KPort)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","?
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//ports+=KPort
		public Assignment getPortsAssignment_3_3_1() { return cPortsAssignment_3_3_1; }

		//KPort
		public RuleCall getPortsKPortParserRuleCall_3_3_1_0() { return cPortsKPortParserRuleCall_3_3_1_0; }

		//("data" ":"? data+=KGraphData (","? data+=KGraphData)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"data"
		public Keyword getDataKeyword_4_0() { return cDataKeyword_4_0; }

		//":"?
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//data+=KGraphData
		public Assignment getDataAssignment_4_2() { return cDataAssignment_4_2; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_4_2_0() { return cDataKGraphDataParserRuleCall_4_2_0; }

		//(","? data+=KGraphData)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","?
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//data+=KGraphData
		public Assignment getDataAssignment_4_3_1() { return cDataAssignment_4_3_1; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_4_3_1_0() { return cDataKGraphDataParserRuleCall_4_3_1_0; }

		//("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"labels"
		public Keyword getLabelsKeyword_5_0() { return cLabelsKeyword_5_0; }

		//":"?
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//labels+=KLabel
		public Assignment getLabelsAssignment_5_2() { return cLabelsAssignment_5_2; }

		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_5_2_0() { return cLabelsKLabelParserRuleCall_5_2_0; }

		//(","? labels+=KLabel)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","?
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//labels+=KLabel
		public Assignment getLabelsAssignment_5_3_1() { return cLabelsAssignment_5_3_1; }

		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_5_3_1_0() { return cLabelsKLabelParserRuleCall_5_3_1_0; }

		//("children" ":"? children+=KNode (","? children+=KNode)*)?
		public Group getGroup_6() { return cGroup_6; }

		//"children"
		public Keyword getChildrenKeyword_6_0() { return cChildrenKeyword_6_0; }

		//":"?
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//children+=KNode
		public Assignment getChildrenAssignment_6_2() { return cChildrenAssignment_6_2; }

		//KNode
		public RuleCall getChildrenKNodeParserRuleCall_6_2_0() { return cChildrenKNodeParserRuleCall_6_2_0; }

		//(","? children+=KNode)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","?
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//children+=KNode
		public Assignment getChildrenAssignment_6_3_1() { return cChildrenAssignment_6_3_1; }

		//KNode
		public RuleCall getChildrenKNodeParserRuleCall_6_3_1_0() { return cChildrenKNodeParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//(outgoingEdges+=KEdge (","? outgoingEdges+=KEdge)*)?
		public Group getGroup_8() { return cGroup_8; }

		//outgoingEdges+=KEdge
		public Assignment getOutgoingEdgesAssignment_8_0() { return cOutgoingEdgesAssignment_8_0; }

		//KEdge
		public RuleCall getOutgoingEdgesKEdgeParserRuleCall_8_0_0() { return cOutgoingEdgesKEdgeParserRuleCall_8_0_0; }

		//(","? outgoingEdges+=KEdge)*
		public Group getGroup_8_1() { return cGroup_8_1; }

		//","?
		public Keyword getCommaKeyword_8_1_0() { return cCommaKeyword_8_1_0; }

		//outgoingEdges+=KEdge
		public Assignment getOutgoingEdgesAssignment_8_1_1() { return cOutgoingEdgesAssignment_8_1_1; }

		//KEdge
		public RuleCall getOutgoingEdgesKEdgeParserRuleCall_8_1_1_0() { return cOutgoingEdgesKEdgeParserRuleCall_8_1_1_0; }
	}

	public class KLabelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KLabel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKLabelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDataKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDataAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDataKGraphDataParserRuleCall_3_2_0 = (RuleCall)cDataAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cDataAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cDataKGraphDataParserRuleCall_3_3_1_0 = (RuleCall)cDataAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//KLabel: //    'KLabel'
		////    '{'
		////        'text' text=EString
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////    '}';
		//	"KLabel" text=EString "{" ("data" ":"? data+=KGraphData (","? data+=KGraphData)*)? "}";
		public ParserRule getRule() { return rule; }

		////    'KLabel'
		////    '{'
		////        'text' text=EString
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////    '}';
		//"KLabel" text=EString "{" ("data" ":"? data+=KGraphData (","? data+=KGraphData)*)? "}"
		public Group getGroup() { return cGroup; }

		////    'KLabel'
		////    '{'
		////        'text' text=EString
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////    '}';
		//"KLabel"
		public Keyword getKLabelKeyword_0() { return cKLabelKeyword_0; }

		//text=EString
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }

		//EString
		public RuleCall getTextEStringParserRuleCall_1_0() { return cTextEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("data" ":"? data+=KGraphData (","? data+=KGraphData)*)?
		public Group getGroup_3() { return cGroup_3; }

		//"data"
		public Keyword getDataKeyword_3_0() { return cDataKeyword_3_0; }

		//":"?
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//data+=KGraphData
		public Assignment getDataAssignment_3_2() { return cDataAssignment_3_2; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_3_2_0() { return cDataKGraphDataParserRuleCall_3_2_0; }

		//(","? data+=KGraphData)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","?
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//data+=KGraphData
		public Assignment getDataAssignment_3_3_1() { return cDataAssignment_3_3_1; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_3_3_1_0() { return cDataKGraphDataParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class KPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEdgesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cEdgesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cEdgesKEdgeCrossReference_3_2_0 = (CrossReference)cEdgesAssignment_3_2.eContents().get(0);
		private final RuleCall cEdgesKEdgeEStringParserRuleCall_3_2_0_1 = (RuleCall)cEdgesKEdgeCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cEdgesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cEdgesKEdgeCrossReference_3_3_1_0 = (CrossReference)cEdgesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cEdgesKEdgeEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cEdgesKEdgeCrossReference_3_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDataKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDataAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDataKGraphDataParserRuleCall_4_2_0 = (RuleCall)cDataAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cDataAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cDataKGraphDataParserRuleCall_4_3_1_0 = (RuleCall)cDataAssignment_4_3_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLabelsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLabelsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLabelsKLabelParserRuleCall_5_2_0 = (RuleCall)cLabelsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cLabelsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cLabelsKLabelParserRuleCall_5_3_1_0 = (RuleCall)cLabelsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//KPort: //    {KPort}
		////    'KPort'
		////    '{'
		////        ('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////    '}';
		//	{KPort} "KPort" "{" ("edges" ":"? edges+=[KEdge|EString] (","? edges+=[KEdge|EString])*)? ("data" ":"? data+=KGraphData
		//	(","? data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? "}";
		public ParserRule getRule() { return rule; }

		////    {KPort}
		////    'KPort'
		////    '{'
		////        ('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////    '}';
		//{KPort} "KPort" "{" ("edges" ":"? edges+=[KEdge|EString] (","? edges+=[KEdge|EString])*)? ("data" ":"? data+=KGraphData
		//(","? data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? "}"
		public Group getGroup() { return cGroup; }

		////    {KPort}
		////    'KPort'
		////    '{'
		////        ('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////    '}';
		//{KPort}
		public Action getKPortAction_0() { return cKPortAction_0; }

		//"KPort"
		public Keyword getKPortKeyword_1() { return cKPortKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("edges" ":"? edges+=[KEdge|EString] (","? edges+=[KEdge|EString])*)?
		public Group getGroup_3() { return cGroup_3; }

		//"edges"
		public Keyword getEdgesKeyword_3_0() { return cEdgesKeyword_3_0; }

		//":"?
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//edges+=[KEdge|EString]
		public Assignment getEdgesAssignment_3_2() { return cEdgesAssignment_3_2; }

		//[KEdge|EString]
		public CrossReference getEdgesKEdgeCrossReference_3_2_0() { return cEdgesKEdgeCrossReference_3_2_0; }

		//EString
		public RuleCall getEdgesKEdgeEStringParserRuleCall_3_2_0_1() { return cEdgesKEdgeEStringParserRuleCall_3_2_0_1; }

		//(","? edges+=[KEdge|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","?
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//edges+=[KEdge|EString]
		public Assignment getEdgesAssignment_3_3_1() { return cEdgesAssignment_3_3_1; }

		//[KEdge|EString]
		public CrossReference getEdgesKEdgeCrossReference_3_3_1_0() { return cEdgesKEdgeCrossReference_3_3_1_0; }

		//EString
		public RuleCall getEdgesKEdgeEStringParserRuleCall_3_3_1_0_1() { return cEdgesKEdgeEStringParserRuleCall_3_3_1_0_1; }

		//("data" ":"? data+=KGraphData (","? data+=KGraphData)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"data"
		public Keyword getDataKeyword_4_0() { return cDataKeyword_4_0; }

		//":"?
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//data+=KGraphData
		public Assignment getDataAssignment_4_2() { return cDataAssignment_4_2; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_4_2_0() { return cDataKGraphDataParserRuleCall_4_2_0; }

		//(","? data+=KGraphData)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","?
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//data+=KGraphData
		public Assignment getDataAssignment_4_3_1() { return cDataAssignment_4_3_1; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_4_3_1_0() { return cDataKGraphDataParserRuleCall_4_3_1_0; }

		//("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"labels"
		public Keyword getLabelsKeyword_5_0() { return cLabelsKeyword_5_0; }

		//":"?
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//labels+=KLabel
		public Assignment getLabelsAssignment_5_2() { return cLabelsAssignment_5_2; }

		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_5_2_0() { return cLabelsKLabelParserRuleCall_5_2_0; }

		//(","? labels+=KLabel)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","?
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//labels+=KLabel
		public Assignment getLabelsAssignment_5_3_1() { return cLabelsAssignment_5_3_1; }

		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_5_3_1_0() { return cLabelsKLabelParserRuleCall_5_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class KEdgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KEdge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusHyphenMinusGreaterThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTargetKNodeCrossReference_1_0 = (CrossReference)cTargetAssignment_1.eContents().get(0);
		private final RuleCall cTargetKNodeEStringParserRuleCall_1_0_1 = (RuleCall)cTargetKNodeCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSourcePortKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourcePortAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSourcePortKPortCrossReference_3_1_0 = (CrossReference)cSourcePortAssignment_3_1.eContents().get(0);
		private final RuleCall cSourcePortKPortEStringParserRuleCall_3_1_0_1 = (RuleCall)cSourcePortKPortCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTargetPortKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetPortAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTargetPortKPortCrossReference_4_1_0 = (CrossReference)cTargetPortAssignment_4_1.eContents().get(0);
		private final RuleCall cTargetPortKPortEStringParserRuleCall_4_1_0_1 = (RuleCall)cTargetPortKPortCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDataKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cDataAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cDataKGraphDataParserRuleCall_5_2_0 = (RuleCall)cDataAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cDataAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cDataKGraphDataParserRuleCall_5_3_1_0 = (RuleCall)cDataAssignment_5_3_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLabelsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cLabelsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cLabelsKLabelParserRuleCall_6_2_0 = (RuleCall)cLabelsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cLabelsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cLabelsKLabelParserRuleCall_6_3_1_0 = (RuleCall)cLabelsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//KEdge: //    'KEdge'
		////    '{'
		////        'target' target=[KNode|EString]
		////        ('sourcePort' sourcePort=[KPort|EString])?
		////        ('targetPort' targetPort=[KPort|EString])?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////    '}';
		//// TODO: In an advanced version of the textual KGraph language the fragment URI used to identify the
		//// edge's target and ports shall be parsed and decomposed by related parser rules.
		//	"-->" target=[KNode|EString] "{" ("sourcePort" sourcePort=[KPort|EString])? ("targetPort" targetPort=[KPort|EString])?
		//	("data" ":"? data+=KGraphData (","? data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? "}";
		public ParserRule getRule() { return rule; }

		////    'KEdge'
		////    '{'
		////        'target' target=[KNode|EString]
		////        ('sourcePort' sourcePort=[KPort|EString])?
		////        ('targetPort' targetPort=[KPort|EString])?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////    '}';
		//// TODO: In an advanced version of the textual KGraph language the fragment URI used to identify the
		//// edge's target and ports shall be parsed and decomposed by related parser rules.
		//"-->" target=[KNode|EString] "{" ("sourcePort" sourcePort=[KPort|EString])? ("targetPort" targetPort=[KPort|EString])?
		//("data" ":"? data+=KGraphData (","? data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? "}"
		public Group getGroup() { return cGroup; }

		////    'KEdge'
		////    '{'
		////        'target' target=[KNode|EString]
		////        ('sourcePort' sourcePort=[KPort|EString])?
		////        ('targetPort' targetPort=[KPort|EString])?
		////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		////    '}';
		//// TODO: In an advanced version of the textual KGraph language the fragment URI used to identify the
		//// edge's target and ports shall be parsed and decomposed by related parser rules.
		//"-->"
		public Keyword getHyphenMinusHyphenMinusGreaterThanSignKeyword_0() { return cHyphenMinusHyphenMinusGreaterThanSignKeyword_0; }

		//target=[KNode|EString]
		public Assignment getTargetAssignment_1() { return cTargetAssignment_1; }

		//[KNode|EString]
		public CrossReference getTargetKNodeCrossReference_1_0() { return cTargetKNodeCrossReference_1_0; }

		//EString
		public RuleCall getTargetKNodeEStringParserRuleCall_1_0_1() { return cTargetKNodeEStringParserRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("sourcePort" sourcePort=[KPort|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"sourcePort"
		public Keyword getSourcePortKeyword_3_0() { return cSourcePortKeyword_3_0; }

		//sourcePort=[KPort|EString]
		public Assignment getSourcePortAssignment_3_1() { return cSourcePortAssignment_3_1; }

		//[KPort|EString]
		public CrossReference getSourcePortKPortCrossReference_3_1_0() { return cSourcePortKPortCrossReference_3_1_0; }

		//EString
		public RuleCall getSourcePortKPortEStringParserRuleCall_3_1_0_1() { return cSourcePortKPortEStringParserRuleCall_3_1_0_1; }

		//("targetPort" targetPort=[KPort|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"targetPort"
		public Keyword getTargetPortKeyword_4_0() { return cTargetPortKeyword_4_0; }

		//targetPort=[KPort|EString]
		public Assignment getTargetPortAssignment_4_1() { return cTargetPortAssignment_4_1; }

		//[KPort|EString]
		public CrossReference getTargetPortKPortCrossReference_4_1_0() { return cTargetPortKPortCrossReference_4_1_0; }

		//EString
		public RuleCall getTargetPortKPortEStringParserRuleCall_4_1_0_1() { return cTargetPortKPortEStringParserRuleCall_4_1_0_1; }

		//("data" ":"? data+=KGraphData (","? data+=KGraphData)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"data"
		public Keyword getDataKeyword_5_0() { return cDataKeyword_5_0; }

		//":"?
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//data+=KGraphData
		public Assignment getDataAssignment_5_2() { return cDataAssignment_5_2; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_5_2_0() { return cDataKGraphDataParserRuleCall_5_2_0; }

		//(","? data+=KGraphData)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//","?
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }

		//data+=KGraphData
		public Assignment getDataAssignment_5_3_1() { return cDataAssignment_5_3_1; }

		//KGraphData
		public RuleCall getDataKGraphDataParserRuleCall_5_3_1_0() { return cDataKGraphDataParserRuleCall_5_3_1_0; }

		//("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)?
		public Group getGroup_6() { return cGroup_6; }

		//"labels"
		public Keyword getLabelsKeyword_6_0() { return cLabelsKeyword_6_0; }

		//":"?
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//labels+=KLabel
		public Assignment getLabelsAssignment_6_2() { return cLabelsAssignment_6_2; }

		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_6_2_0() { return cLabelsKLabelParserRuleCall_6_2_0; }

		//(","? labels+=KLabel)*
		public Group getGroup_6_3() { return cGroup_6_3; }

		//","?
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }

		//labels+=KLabel
		public Assignment getLabelsAssignment_6_3_1() { return cLabelsAssignment_6_3_1; }

		//KLabel
		public RuleCall getLabelsKLabelParserRuleCall_6_3_1_0() { return cLabelsKLabelParserRuleCall_6_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class KGraphDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KGraphData");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cKRenderingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKRenderingLibraryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cKShapeLayoutParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cKEdgeLayoutParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cKGraphDataImplParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//KGraphData: //    {KGraphData}
		////    'KGraphData'
		////    '{'
		////        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		////    '}';
		//	KRendering | KRenderingLibrary | KShapeLayout | KEdgeLayout | KGraphDataImpl;
		public ParserRule getRule() { return rule; }

		////    {KGraphData}
		////    'KGraphData'
		////    '{'
		////        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		////    '}';
		//KRendering | KRenderingLibrary | KShapeLayout | KEdgeLayout | KGraphDataImpl
		public Alternatives getAlternatives() { return cAlternatives; }

		////    {KGraphData}
		////    'KGraphData'
		////    '{'
		////        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		////    '}';
		//KRendering
		public RuleCall getKRenderingParserRuleCall_0() { return cKRenderingParserRuleCall_0; }

		//KRenderingLibrary
		public RuleCall getKRenderingLibraryParserRuleCall_1() { return cKRenderingLibraryParserRuleCall_1; }

		//KShapeLayout
		public RuleCall getKShapeLayoutParserRuleCall_2() { return cKShapeLayoutParserRuleCall_2; }

		//KEdgeLayout
		public RuleCall getKEdgeLayoutParserRuleCall_3() { return cKEdgeLayoutParserRuleCall_3; }

		//KGraphDataImpl
		public RuleCall getKGraphDataImplParserRuleCall_4() { return cKGraphDataImplParserRuleCall_4; }
	}

	public class KGraphDataImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KGraphDataImpl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKGraphDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cKGraphDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMapPropertiesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cPersistentEntriesAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cPersistentEntriesPersistentEntryParserRuleCall_3_3_0 = (RuleCall)cPersistentEntriesAssignment_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cCommaKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cPersistentEntriesAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cPersistentEntriesPersistentEntryParserRuleCall_3_4_1_0 = (RuleCall)cPersistentEntriesAssignment_3_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		////PersistentEntry returns PersistentEntry:
		////    'PersistentEntry'
		////    '{'
		////        'key' key=EString
		////        ('value' value=EString)?
		////    '}';
		////EString returns ecore::EString:
		////    STRING | ID;
		//KGraphDataImpl returns KGraphData:
		//	{KGraphData} "KGraphData" "{" ("mapProperties" ":"? "{" persistentEntries+=PersistentEntry (","
		//	persistentEntries+=PersistentEntry)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{KGraphData} "KGraphData" "{" ("mapProperties" ":"? "{" persistentEntries+=PersistentEntry (","
		//persistentEntries+=PersistentEntry)* "}")? "}" //PersistentEntry returns PersistentEntry:
		////    'PersistentEntry'
		////    '{'
		////        'key' key=EString
		////        ('value' value=EString)?
		////    '}';
		////EString returns ecore::EString:
		////    STRING | ID;
		public Group getGroup() { return cGroup; }

		//{KGraphData}
		public Action getKGraphDataAction_0() { return cKGraphDataAction_0; }

		//"KGraphData"
		public Keyword getKGraphDataKeyword_1() { return cKGraphDataKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("mapProperties" ":"? "{" persistentEntries+=PersistentEntry ("," persistentEntries+=PersistentEntry)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"mapProperties"
		public Keyword getMapPropertiesKeyword_3_0() { return cMapPropertiesKeyword_3_0; }

		//":"?
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_2() { return cLeftCurlyBracketKeyword_3_2; }

		//persistentEntries+=PersistentEntry
		public Assignment getPersistentEntriesAssignment_3_3() { return cPersistentEntriesAssignment_3_3; }

		//PersistentEntry
		public RuleCall getPersistentEntriesPersistentEntryParserRuleCall_3_3_0() { return cPersistentEntriesPersistentEntryParserRuleCall_3_3_0; }

		//("," persistentEntries+=PersistentEntry)*
		public Group getGroup_3_4() { return cGroup_3_4; }

		//","
		public Keyword getCommaKeyword_3_4_0() { return cCommaKeyword_3_4_0; }

		//persistentEntries+=PersistentEntry
		public Assignment getPersistentEntriesAssignment_3_4_1() { return cPersistentEntriesAssignment_3_4_1; }

		//PersistentEntry
		public RuleCall getPersistentEntriesPersistentEntryParserRuleCall_3_4_1_0() { return cPersistentEntriesPersistentEntryParserRuleCall_3_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_5() { return cRightCurlyBracketKeyword_3_5; }

		////PersistentEntry returns PersistentEntry:
		////    'PersistentEntry'
		////    '{'
		////        'key' key=EString
		////        ('value' value=EString)?
		////    '}';
		////EString returns ecore::EString:
		////    STRING | ID;
		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private KNodeElements pKNode;
	private KLabelElements pKLabel;
	private KPortElements pKPort;
	private KEdgeElements pKEdge;
	private KGraphDataElements pKGraphData;
	private KGraphDataImplElements pKGraphDataImpl;
	
	private final Grammar grammar;

	private KRenderingGrammarAccess gaKRendering;

	@Inject
	public KGraphGrammarAccess(GrammarProvider grammarProvider,
		KRenderingGrammarAccess gaKRendering) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaKRendering = gaKRendering;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.core.kgraph.text.KGraph".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public KRenderingGrammarAccess getKRenderingGrammarAccess() {
		return gaKRendering;
	}

	
	//KNode: //    {KNode}
	////    'KNode'
	////    '{'
	////        ('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
	////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
	////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
	////        ('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
	////        ('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
	////        ('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
	////    '}';
	//	{KNode} "KNode" "{" ("ports" ":"? ports+=KPort (","? ports+=KPort)*)? ("data" ":"? data+=KGraphData (","?
	//	data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? ("children" ":"? children+=KNode (","?
	//	children+=KNode)*)? "}" (outgoingEdges+=KEdge (","? outgoingEdges+=KEdge)*)?;
	public KNodeElements getKNodeAccess() {
		return (pKNode != null) ? pKNode : (pKNode = new KNodeElements());
	}
	
	public ParserRule getKNodeRule() {
		return getKNodeAccess().getRule();
	}

	//KLabel: //    'KLabel'
	////    '{'
	////        'text' text=EString
	////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
	////    '}';
	//	"KLabel" text=EString "{" ("data" ":"? data+=KGraphData (","? data+=KGraphData)*)? "}";
	public KLabelElements getKLabelAccess() {
		return (pKLabel != null) ? pKLabel : (pKLabel = new KLabelElements());
	}
	
	public ParserRule getKLabelRule() {
		return getKLabelAccess().getRule();
	}

	//KPort: //    {KPort}
	////    'KPort'
	////    '{'
	////        ('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
	////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
	////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
	////    '}';
	//	{KPort} "KPort" "{" ("edges" ":"? edges+=[KEdge|EString] (","? edges+=[KEdge|EString])*)? ("data" ":"? data+=KGraphData
	//	(","? data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? "}";
	public KPortElements getKPortAccess() {
		return (pKPort != null) ? pKPort : (pKPort = new KPortElements());
	}
	
	public ParserRule getKPortRule() {
		return getKPortAccess().getRule();
	}

	//KEdge: //    'KEdge'
	////    '{'
	////        'target' target=[KNode|EString]
	////        ('sourcePort' sourcePort=[KPort|EString])?
	////        ('targetPort' targetPort=[KPort|EString])?
	////        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
	////        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
	////    '}';
	//// TODO: In an advanced version of the textual KGraph language the fragment URI used to identify the
	//// edge's target and ports shall be parsed and decomposed by related parser rules.
	//	"-->" target=[KNode|EString] "{" ("sourcePort" sourcePort=[KPort|EString])? ("targetPort" targetPort=[KPort|EString])?
	//	("data" ":"? data+=KGraphData (","? data+=KGraphData)*)? ("labels" ":"? labels+=KLabel (","? labels+=KLabel)*)? "}";
	public KEdgeElements getKEdgeAccess() {
		return (pKEdge != null) ? pKEdge : (pKEdge = new KEdgeElements());
	}
	
	public ParserRule getKEdgeRule() {
		return getKEdgeAccess().getRule();
	}

	//KGraphData: //    {KGraphData}
	////    'KGraphData'
	////    '{'
	////        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
	////    '}';
	//	KRendering | KRenderingLibrary | KShapeLayout | KEdgeLayout | KGraphDataImpl;
	public KGraphDataElements getKGraphDataAccess() {
		return (pKGraphData != null) ? pKGraphData : (pKGraphData = new KGraphDataElements());
	}
	
	public ParserRule getKGraphDataRule() {
		return getKGraphDataAccess().getRule();
	}

	////PersistentEntry returns PersistentEntry:
	////    'PersistentEntry'
	////    '{'
	////        'key' key=EString
	////        ('value' value=EString)?
	////    '}';
	////EString returns ecore::EString:
	////    STRING | ID;
	//KGraphDataImpl returns KGraphData:
	//	{KGraphData} "KGraphData" "{" ("mapProperties" ":"? "{" persistentEntries+=PersistentEntry (","
	//	persistentEntries+=PersistentEntry)* "}")? "}";
	public KGraphDataImplElements getKGraphDataImplAccess() {
		return (pKGraphDataImpl != null) ? pKGraphDataImpl : (pKGraphDataImpl = new KGraphDataImplElements());
	}
	
	public ParserRule getKGraphDataImplRule() {
		return getKGraphDataImplAccess().getRule();
	}

	//KRenderingLibrary:
	//	{KRenderingLibrary} "RenderingLibrary" "{" (renderings+=KRendering (","? renderings+=KRendering)*)? "}";
	public KRenderingGrammarAccess.KRenderingLibraryElements getKRenderingLibraryAccess() {
		return gaKRendering.getKRenderingLibraryAccess();
	}
	
	public ParserRule getKRenderingLibraryRule() {
		return getKRenderingLibraryAccess().getRule();
	}

	//KRendering:
	//	KEllipse | KRectangle | KRoundedRectangle | KPolyline_Impl | KPolygon | KImage | KArc | KRenderingRef | KChildArea |
	//	KText | KCustomRendering | KSpline | KRoundedBendsPolyline;
	public KRenderingGrammarAccess.KRenderingElements getKRenderingAccess() {
		return gaKRendering.getKRenderingAccess();
	}
	
	public ParserRule getKRenderingRule() {
		return getKRenderingAccess().getRule();
	}

	//KPlacementData:
	//	KDecoratorPlacementData | KGridPlacementData | KAreaPlacementData | KPointPlacementData;
	public KRenderingGrammarAccess.KPlacementDataElements getKPlacementDataAccess() {
		return gaKRendering.getKPlacementDataAccess();
	}
	
	public ParserRule getKPlacementDataRule() {
		return getKPlacementDataAccess().getRule();
	}

	//KStyle:
	//	KLineWidth | KForeground | KBackground | KVisibility | KLineStyle | KLineCap | KRotation | KFontBold | KFontItalic |
	//	KFontName | KFontSize | KVerticalAlignment | KHorizontalAlignment | KStyleRef;
	public KRenderingGrammarAccess.KStyleElements getKStyleAccess() {
		return gaKRendering.getKStyleAccess();
	}
	
	public ParserRule getKStyleRule() {
		return getKStyleAccess().getRule();
	}

	//KPlacement:
	//	KGridPlacement;
	public KRenderingGrammarAccess.KPlacementElements getKPlacementAccess() {
		return gaKRendering.getKPlacementAccess();
	}
	
	public ParserRule getKPlacementRule() {
		return getKPlacementAccess().getRule();
	}

	//KXPosition:
	//	KLeftPosition | KRightPosition;
	public KRenderingGrammarAccess.KXPositionElements getKXPositionAccess() {
		return gaKRendering.getKXPositionAccess();
	}
	
	public ParserRule getKXPositionRule() {
		return getKXPositionAccess().getRule();
	}

	//KYPosition:
	//	KTopPosition | KBottomPosition;
	public KRenderingGrammarAccess.KYPositionElements getKYPositionAccess() {
		return gaKRendering.getKYPositionAccess();
	}
	
	public ParserRule getKYPositionRule() {
		return getKYPositionAccess().getRule();
	}

	//KRenderingRef:
	//	{KRenderingRef} "RenderingRef" rendering=[KRendering|EString] ("{" ("styles" ":"? styles+=KStyle (","?
	//	styles+=KStyle)*)? ("placementData" ":"? placementData=KPlacementData)? "}")?;
	public KRenderingGrammarAccess.KRenderingRefElements getKRenderingRefAccess() {
		return gaKRendering.getKRenderingRefAccess();
	}
	
	public ParserRule getKRenderingRefRule() {
		return getKRenderingRefAccess().getRule();
	}

	//KEllipse:
	//	{KEllipse} "Ellipse" ("{" ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"?
	//	placementData=KPlacementData)? ("childPlacement" ":"? childPlacement=KPlacement)? ("children" ":"?
	//	children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KEllipseElements getKEllipseAccess() {
		return gaKRendering.getKEllipseAccess();
	}
	
	public ParserRule getKEllipseRule() {
		return getKEllipseAccess().getRule();
	}

	//KRectangle:
	//	{KRectangle} "Rectangle" ("{" ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"?
	//	placementData=KPlacementData)? ("childPlacement" ":"? childPlacement=KPlacement)? ("children" ":"?
	//	children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KRectangleElements getKRectangleAccess() {
		return gaKRendering.getKRectangleAccess();
	}
	
	public ParserRule getKRectangleRule() {
		return getKRectangleAccess().getRule();
	}

	//KRoundedRectangle:
	//	{KRoundedRectangle} "RoundedRectangle" cornerWidth=EFloat ","? cornerHeight=EFloat ("{" ("styles" ":"? styles+=KStyle
	//	(","? styles+=KStyle)*)? ("placementData" ":"? placementData=KPlacementData)? ("childPlacement" ":"?
	//	childPlacement=KPlacement)? ("children" ":"? children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KRoundedRectangleElements getKRoundedRectangleAccess() {
		return gaKRendering.getKRoundedRectangleAccess();
	}
	
	public ParserRule getKRoundedRectangleRule() {
		return getKRoundedRectangleAccess().getRule();
	}

	//KPolyline_Impl returns KPolyline:
	//	{KPolyline} "Polyline" ("{" ("points" ":"? points+=KPosition (","? points+=KPosition)*)? ("styles" ":"? styles+=KStyle
	//	(","? styles+=KStyle)*)? ("placementData" ":"? placementData=KPlacementData)? ("childPlacement" ":"?
	//	childPlacement=KPlacement)? ("children" ":"? children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KPolyline_ImplElements getKPolyline_ImplAccess() {
		return gaKRendering.getKPolyline_ImplAccess();
	}
	
	public ParserRule getKPolyline_ImplRule() {
		return getKPolyline_ImplAccess().getRule();
	}

	//KRoundedBendsPolyline:
	//	{KRoundedBendsPolyline} "RoundedBendsPolyline" bendRadius=EFloat ("{" ("points" ":"? points+=KPosition (","?
	//	points+=KPosition)*)? ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"?
	//	placementData=KPlacementData)? ("childPlacement" ":"? childPlacement=KPlacement)? ("children" ":"?
	//	children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KRoundedBendsPolylineElements getKRoundedBendsPolylineAccess() {
		return gaKRendering.getKRoundedBendsPolylineAccess();
	}
	
	public ParserRule getKRoundedBendsPolylineRule() {
		return getKRoundedBendsPolylineAccess().getRule();
	}

	//KPolygon:
	//	{KPolygon} "Polygon" ("{" ("points" ":"? points+=KPosition (","? points+=KPosition)*)? ("styles" ":"? styles+=KStyle
	//	(","? styles+=KStyle)*)? ("placementData" ":"? placementData=KPlacementData)? ("childPlacement" ":"?
	//	childPlacement=KPlacement)? ("children" ":"? children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KPolygonElements getKPolygonAccess() {
		return gaKRendering.getKPolygonAccess();
	}
	
	public ParserRule getKPolygonRule() {
		return getKPolygonAccess().getRule();
	}

	//KImage:
	//	{KImage} "Image" (bundleName=EString | "-") imagePath=EString ("{" ("styles" ":"? styles+=KStyle (","?
	//	styles+=KStyle)*)? ("placementData" ":"? placementData=KPlacementData)? ("childPlacement" ":"?
	//	childPlacement=KPlacement)? ("children" ":"? children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KImageElements getKImageAccess() {
		return gaKRendering.getKImageAccess();
	}
	
	public ParserRule getKImageRule() {
		return getKImageAccess().getRule();
	}

	//KArc:
	//	{KArc} "Arc" startAngle=EFloat ","? arcAngle=EFloat ("{" ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)?
	//	("placementData" ":"? placementData=KPlacementData)? ("childPlacement" ":"? childPlacement=KPlacement)? ("children"
	//	":"? children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KArcElements getKArcAccess() {
		return gaKRendering.getKArcAccess();
	}
	
	public ParserRule getKArcRule() {
		return getKArcAccess().getRule();
	}

	//KChildArea:
	//	{KChildArea} "ChildArea" ("{" ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"?
	//	placementData=KPlacementData)? "}")?;
	public KRenderingGrammarAccess.KChildAreaElements getKChildAreaAccess() {
		return gaKRendering.getKChildAreaAccess();
	}
	
	public ParserRule getKChildAreaRule() {
		return getKChildAreaAccess().getRule();
	}

	//KText:
	//	{KText} "Text" text=EString? ("{" ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"?
	//	placementData=KPlacementData)? // allow mapProperties in order to specify size for size estimation tests
	//	// (I don't trust in the different SWT implementations to
	//	// provide the same size of a text on different platforms)
	//	("mapProperties" ":"? persistentEntries+=PersistentEntry (","? persistentEntries+=PersistentEntry)*)? "}")?;
	public KRenderingGrammarAccess.KTextElements getKTextAccess() {
		return gaKRendering.getKTextAccess();
	}
	
	public ParserRule getKTextRule() {
		return getKTextAccess().getRule();
	}

	//KCustomRendering:
	//	{KCustomRendering} "CustomRendering" ("{" "className" className=EString "bundleName" bundleName=EString ("styles" ":"?
	//	styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"? placementData=KPlacementData)? ("childPlacement" ":"?
	//	childPlacement=KPlacement)? ("children" ":"? children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KCustomRenderingElements getKCustomRenderingAccess() {
		return gaKRendering.getKCustomRenderingAccess();
	}
	
	public ParserRule getKCustomRenderingRule() {
		return getKCustomRenderingAccess().getRule();
	}

	//KSpline:
	//	{KSpline} "Spline" ("{" ("styles" ":"? styles+=KStyle (","? styles+=KStyle)*)? ("placementData" ":"?
	//	placementData=KPlacementData)? ("childPlacement" ":"? childPlacement=KPlacement)? ("children" ":"?
	//	children+=KRendering (","? children+=KRendering)*)? "}")?;
	public KRenderingGrammarAccess.KSplineElements getKSplineAccess() {
		return gaKRendering.getKSplineAccess();
	}
	
	public ParserRule getKSplineRule() {
		return getKSplineAccess().getRule();
	}

	//KDecoratorPlacementData:
	//	"DecoratorPlacementData" "{" rotateWithLine?="rotateWithLine"? "absolute" absolute=EFloat ("relative"
	//	relative=EFloat)? ("xOffset" xOffset=EFloat)? ("yOffset" yOffset=EFloat)? ("width" width=EFloat)? ("height"
	//	height=EFloat)? "}";
	public KRenderingGrammarAccess.KDecoratorPlacementDataElements getKDecoratorPlacementDataAccess() {
		return gaKRendering.getKDecoratorPlacementDataAccess();
	}
	
	public ParserRule getKDecoratorPlacementDataRule() {
		return getKDecoratorPlacementDataAccess().getRule();
	}

	//KGridPlacementData:
	//	{KGridPlacementData} "GridPlacementData" "{" ("minCellWidth" minCellWidth=EFloat)? ("minCellHeight"
	//	minCellHeight=EFloat)? ("maxCellWidth" maxCellWidth=EFloat)? ("maxCellHeight" maxCellHeight=EFloat)? ("topLeft"
	//	topLeft=KPosition)? ("bottomRight" bottomRight=KPosition)? "}";
	public KRenderingGrammarAccess.KGridPlacementDataElements getKGridPlacementDataAccess() {
		return gaKRendering.getKGridPlacementDataAccess();
	}
	
	public ParserRule getKGridPlacementDataRule() {
		return getKGridPlacementDataAccess().getRule();
	}

	//KAreaPlacementData:
	//	"AreaPlacementData" "{" "topLeft" topLeft=KPosition ","? "bottomRight" bottomRight=KPosition "}";
	public KRenderingGrammarAccess.KAreaPlacementDataElements getKAreaPlacementDataAccess() {
		return gaKRendering.getKAreaPlacementDataAccess();
	}
	
	public ParserRule getKAreaPlacementDataRule() {
		return getKAreaPlacementDataAccess().getRule();
	}

	//KPointPlacementData:
	//	"PointPlacementData" "{" "referencePoint" referencePoint=KPosition ("verticalAlignment"
	//	verticalAlignment=VerticalAlignment)? ("horizontalAlignment" horizontalAlignment=HorizontalAlignment)?
	//	("horizontalMargin" horizontalMargin=EFloat)? ("verticalMargin" verticalMargin=EFloat)? "}";
	public KRenderingGrammarAccess.KPointPlacementDataElements getKPointPlacementDataAccess() {
		return gaKRendering.getKPointPlacementDataAccess();
	}
	
	public ParserRule getKPointPlacementDataRule() {
		return getKPointPlacementDataAccess().getRule();
	}

	//KPosition:
	//	x=KXPosition "/" y=KYPosition;
	public KRenderingGrammarAccess.KPositionElements getKPositionAccess() {
		return gaKRendering.getKPositionAccess();
	}
	
	public ParserRule getKPositionRule() {
		return getKPositionAccess().getRule();
	}

	//KLeftPosition:
	//	{KLeftPosition} "left" absolute=EFloat relative=EFloat;
	public KRenderingGrammarAccess.KLeftPositionElements getKLeftPositionAccess() {
		return gaKRendering.getKLeftPositionAccess();
	}
	
	public ParserRule getKLeftPositionRule() {
		return getKLeftPositionAccess().getRule();
	}

	//KRightPosition:
	//	{KRightPosition} "right" absolute=EFloat relative=EFloat;
	public KRenderingGrammarAccess.KRightPositionElements getKRightPositionAccess() {
		return gaKRendering.getKRightPositionAccess();
	}
	
	public ParserRule getKRightPositionRule() {
		return getKRightPositionAccess().getRule();
	}

	//KTopPosition:
	//	{KTopPosition} "top" absolute=EFloat relative=EFloat;
	public KRenderingGrammarAccess.KTopPositionElements getKTopPositionAccess() {
		return gaKRendering.getKTopPositionAccess();
	}
	
	public ParserRule getKTopPositionRule() {
		return getKTopPositionAccess().getRule();
	}

	//KBottomPosition:
	//	{KBottomPosition} "bottom" absolute=EFloat relative=EFloat;
	public KRenderingGrammarAccess.KBottomPositionElements getKBottomPositionAccess() {
		return gaKRendering.getKBottomPositionAccess();
	}
	
	public ParserRule getKBottomPositionRule() {
		return getKBottomPositionAccess().getRule();
	}

	//KColor:
	//	{KColor} red=EInt green=EInt blue=EInt;
	public KRenderingGrammarAccess.KColorElements getKColorAccess() {
		return gaKRendering.getKColorAccess();
	}
	
	public ParserRule getKColorRule() {
		return getKColorAccess().getRule();
	}

	//KBackground:
	//	{KBackground} "background" "{" ("color" color=KColor)? ("targetColor" targetColor=KColor)? ("alpha" alpha=EInt)?
	//	("targetAlpha" targetAlpha=EInt)? ("gradientAngle" gradientAngle=EFloat)? "}" propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KBackgroundElements getKBackgroundAccess() {
		return gaKRendering.getKBackgroundAccess();
	}
	
	public ParserRule getKBackgroundRule() {
		return getKBackgroundAccess().getRule();
	}

	//KForeground:
	//	{KForeground} "foreground" "{" ("color" color=KColor)? ("targetColor" targetColor=KColor)? ("alpha" alpha=EInt)?
	//	("targetAlpha" targetAlpha=EInt)? ("gradientAngle" gradientAngle=EFloat)? "}" propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KForegroundElements getKForegroundAccess() {
		return gaKRendering.getKForegroundAccess();
	}
	
	public ParserRule getKForegroundRule() {
		return getKForegroundAccess().getRule();
	}

	//KVisibility returns KInvisibility:
	//	{KInvisibility} invisible?="invisible" ("modifier" "=" functionId=EString)?;
	public KRenderingGrammarAccess.KVisibilityElements getKVisibilityAccess() {
		return gaKRendering.getKVisibilityAccess();
	}
	
	public ParserRule getKVisibilityRule() {
		return getKVisibilityAccess().getRule();
	}

	//KLineWidth:
	//	"lineWidth" lineWidth=EFloat propagateToChildren?="!"? ("modifier" "=" functionId=EString)?;
	public KRenderingGrammarAccess.KLineWidthElements getKLineWidthAccess() {
		return gaKRendering.getKLineWidthAccess();
	}
	
	public ParserRule getKLineWidthRule() {
		return getKLineWidthAccess().getRule();
	}

	//KLineStyle:
	//	{KLineStyle} "lineStyle" lineStyle=LineStyle propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KLineStyleElements getKLineStyleAccess() {
		return gaKRendering.getKLineStyleAccess();
	}
	
	public ParserRule getKLineStyleRule() {
		return getKLineStyleAccess().getRule();
	}

	//KLineCap:
	//	{KLineCap} "lineCap" lineCap=LineCap;
	public KRenderingGrammarAccess.KLineCapElements getKLineCapAccess() {
		return gaKRendering.getKLineCapAccess();
	}
	
	public ParserRule getKLineCapRule() {
		return getKLineCapAccess().getRule();
	}

	//KRotation:
	//	{KRotation} "rotation" rotation=EFloat propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KRotationElements getKRotationAccess() {
		return gaKRendering.getKRotationAccess();
	}
	
	public ParserRule getKRotationRule() {
		return getKRotationAccess().getRule();
	}

	//KFontBold:
	//	{KFontBold} bold?="bold" propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KFontBoldElements getKFontBoldAccess() {
		return gaKRendering.getKFontBoldAccess();
	}
	
	public ParserRule getKFontBoldRule() {
		return getKFontBoldAccess().getRule();
	}

	//KFontItalic:
	//	{KFontItalic} italic?="italic" propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KFontItalicElements getKFontItalicAccess() {
		return gaKRendering.getKFontItalicAccess();
	}
	
	public ParserRule getKFontItalicRule() {
		return getKFontItalicAccess().getRule();
	}

	//KFontName:
	//	"font" name=EString propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KFontNameElements getKFontNameAccess() {
		return gaKRendering.getKFontNameAccess();
	}
	
	public ParserRule getKFontNameRule() {
		return getKFontNameAccess().getRule();
	}

	//KFontSize:
	//	"fontSize" size=EInt propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KFontSizeElements getKFontSizeAccess() {
		return gaKRendering.getKFontSizeAccess();
	}
	
	public ParserRule getKFontSizeRule() {
		return getKFontSizeAccess().getRule();
	}

	//KVerticalAlignment:
	//	{KVerticalAlignment} "verticalAlignment" verticalAlignment=VerticalAlignment propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KVerticalAlignmentElements getKVerticalAlignmentAccess() {
		return gaKRendering.getKVerticalAlignmentAccess();
	}
	
	public ParserRule getKVerticalAlignmentRule() {
		return getKVerticalAlignmentAccess().getRule();
	}

	//KHorizontalAlignment:
	//	{KHorizontalAlignment} "horizontalAlignment" horizontalAlignment=HorizontalAlignment propagateToChildren?="!"?;
	public KRenderingGrammarAccess.KHorizontalAlignmentElements getKHorizontalAlignmentAccess() {
		return gaKRendering.getKHorizontalAlignmentAccess();
	}
	
	public ParserRule getKHorizontalAlignmentRule() {
		return getKHorizontalAlignmentAccess().getRule();
	}

	//KStyleRef:
	//	{KStyleRef} "styleRef" styleHolder=[KStyleHolder|EString];
	public KRenderingGrammarAccess.KStyleRefElements getKStyleRefAccess() {
		return gaKRendering.getKStyleRefAccess();
	}
	
	public ParserRule getKStyleRefRule() {
		return getKStyleRefAccess().getRule();
	}

	//KGridPlacement:
	//	{KGridPlacement} "gridPlacement" numColumns=EInt ("{" "topLeft" topLeft=KPosition ","? "bottomRight"
	//	bottomRight=KPosition "}")?;
	public KRenderingGrammarAccess.KGridPlacementElements getKGridPlacementAccess() {
		return gaKRendering.getKGridPlacementAccess();
	}
	
	public ParserRule getKGridPlacementRule() {
		return getKGridPlacementAccess().getRule();
	}

	//enum LineStyle:
	//	SOLID | DASH | DOT | DASHDOT | DASHDOTDOT;
	public KRenderingGrammarAccess.LineStyleElements getLineStyleAccess() {
		return gaKRendering.getLineStyleAccess();
	}
	
	public EnumRule getLineStyleRule() {
		return getLineStyleAccess().getRule();
	}

	//enum LineCap:
	//	CAP_FLAT | CAP_ROUND | CAP_SQUARE;
	public KRenderingGrammarAccess.LineCapElements getLineCapAccess() {
		return gaKRendering.getLineCapAccess();
	}
	
	public EnumRule getLineCapRule() {
		return getLineCapAccess().getRule();
	}

	//enum VerticalAlignment:
	//	TOP | CENTER | BOTTOM;
	public KRenderingGrammarAccess.VerticalAlignmentElements getVerticalAlignmentAccess() {
		return gaKRendering.getVerticalAlignmentAccess();
	}
	
	public EnumRule getVerticalAlignmentRule() {
		return getVerticalAlignmentAccess().getRule();
	}

	//enum HorizontalAlignment:
	//	LEFT | CENTER | RIGHT;
	public KRenderingGrammarAccess.HorizontalAlignmentElements getHorizontalAlignmentAccess() {
		return gaKRendering.getHorizontalAlignmentAccess();
	}
	
	public EnumRule getHorizontalAlignmentRule() {
		return getHorizontalAlignmentAccess().getRule();
	}

	//EFloat returns ecore::EFloat:
	//	"-"? INT ("." INT (("E" | "e") "-"? INT)?)?;
	public KRenderingGrammarAccess.EFloatElements getEFloatAccess() {
		return gaKRendering.getEFloatAccess();
	}
	
	public ParserRule getEFloatRule() {
		return getEFloatAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public KRenderingGrammarAccess.EBooleanElements getEBooleanAccess() {
		return gaKRendering.getEBooleanAccess();
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public KRenderingGrammarAccess.EIntElements getEIntAccess() {
		return gaKRendering.getEIntAccess();
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//KShapeLayout: //    {KShapeLayout}
	////    'KShapeLayout'
	////    '{'
	////        ('xpos' xpos=EFloat)?
	////        ('ypos' ypos=EFloat)?
	////        ('width' width=EFloat)?
	////        ('height' height=EFloat)?
	////        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
	////        ('insets' insets=KInsets)?
	////    '}';
	//	{KShapeLayout} "KShapeLayout" "{" ("xpos" xpos=EFloat)? ("ypos" ypos=EFloat)? ("width" width=EFloat)? ("height"
	//	height=EFloat)? ("insets" insets=KInsets)? ("mapProperties" ":"? persistentEntries+=PersistentEntry (","?
	//	persistentEntries+=PersistentEntry)*)? "}";
	public KLayoutDataGrammarAccess.KShapeLayoutElements getKShapeLayoutAccess() {
		return gaKRendering.getKShapeLayoutAccess();
	}
	
	public ParserRule getKShapeLayoutRule() {
		return getKShapeLayoutAccess().getRule();
	}

	//KInsets:
	//	{KInsets} "KInsets" "{" ("top" top=EFloat)? ("bottom" bottom=EFloat)? ("left" left=EFloat)? ("right" right=EFloat)?
	//	"}";
	public KLayoutDataGrammarAccess.KInsetsElements getKInsetsAccess() {
		return gaKRendering.getKInsetsAccess();
	}
	
	public ParserRule getKInsetsRule() {
		return getKInsetsAccess().getRule();
	}

	//KEdgeLayout: //    'KEdgeLayout'
	////    '{'
	////        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
	////        ('bendPoints' '{' bendPoints+=KPoint ( "," bendPoints+=KPoint)* '}' )?
	////        'sourcePoint' sourcePoint=KPoint
	////        'targetPoint' targetPoint=KPoint
	////    '}';
	//	{KEdgeLayout} "KEdgeLayout" "{" ("sourcePoint" ":"? sourcePoint=KPoint)? ("targetPoint" ":"? targetPoint=KPoint)?
	//	("bendPoints" ":"? bendPoints+=KPoint (","? bendPoints+=KPoint)*)? ("mapProperties" ":"?
	//	persistentEntries+=PersistentEntry (","? persistentEntries+=PersistentEntry)*)? "}";
	public KLayoutDataGrammarAccess.KEdgeLayoutElements getKEdgeLayoutAccess() {
		return gaKRendering.getKEdgeLayoutAccess();
	}
	
	public ParserRule getKEdgeLayoutRule() {
		return getKEdgeLayoutAccess().getRule();
	}

	//KPoint: //    {KPoint}
	////    'KPoint'
	////    '{'
	////        ('x' x=EFloat)?
	////        ('y' y=EFloat)?
	////    '}';
	//	{KPoint} "KPoint" ("x" x=EFloat) ("y" y=EFloat);
	public KLayoutDataGrammarAccess.KPointElements getKPointAccess() {
		return gaKRendering.getKPointAccess();
	}
	
	public ParserRule getKPointRule() {
		return getKPointAccess().getRule();
	}

	//PersistentEntry returns kgraph::PersistentEntry: //    'PersistentEntry'
	////    '{'
	////        'key' key=EString
	////        ('value' value=EString)?
	////    '}';
	//	key=EString ("=" value=EString)?;
	public KLayoutDataGrammarAccess.PersistentEntryElements getPersistentEntryAccess() {
		return gaKRendering.getPersistentEntryAccess();
	}
	
	public ParserRule getPersistentEntryRule() {
		return getPersistentEntryAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public KLayoutDataGrammarAccess.EStringElements getEStringAccess() {
		return gaKRendering.getEStringAccess();
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaKRendering.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaKRendering.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaKRendering.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaKRendering.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaKRendering.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaKRendering.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaKRendering.getANY_OTHERRule();
	} 
}
