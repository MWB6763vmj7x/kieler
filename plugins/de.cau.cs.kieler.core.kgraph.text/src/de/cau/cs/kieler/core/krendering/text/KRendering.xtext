// automatically generated by Xtext
grammar de.cau.cs.kieler.core.krendering.text.KRendering with de.cau.cs.kieler.kiml.klayoutdata.text.KLayoutData //de.cau.cs.kieler.core.kgraph.text.KGraph

import "platform:/resource/de.cau.cs.kieler.core.krendering/model/krendering.ecore" 
//import "http://kieler.cs.cau.de/KRendering"
import "http://kieler.cs.cau.de/KGraph" as kgraph
import "http://kieler.cs.cau.de/KLayoutData" as klayoutdata
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


KRenderingLibrary returns KRenderingLibrary:
	{KRenderingLibrary}
	'KRenderingLibrary'
	'{'
		// ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('renderings' '{' renderings+=KRendering ( "," renderings+=KRendering)* '}' )?
    '}';

KRendering returns KRendering:
	KEllipse | KRectangle | KRoundedRectangle | KPolyline_Impl | KPolygon | KImage | KArc | KRenderingRef | KChildArea | KText | KCustomRendering | KSpline;

KPlacementData returns KPlacementData:
	KDecoratorPlacementData | KGridPlacementData | KStackPlacementData | KDirectPlacementData | KPolylinePlacementData;

KStyle returns KStyle:
	KStyle_Impl | KForegroundColor | KBackgroundColor | KLineWidth | KVisibility | KLineStyle | KVerticalAlignment | KHorizontalAlignment;

KPlacement returns KPlacement:
	KGridPlacement | KStackPlacement;

KXPosition returns KXPosition:
	KLeftPosition | KRightPosition;

KYPosition returns KYPosition:
	KTopPosition | KBottomPosition;

PersistentEntry returns kgraph::PersistentEntry:
	'PersistentEntry'
	'{'
		'key' key=EString
		('value' value=EString)?
    '}';

EString returns ecore::EString:
	STRING | ID;

KRenderingRef returns KRenderingRef:
	'KRenderingRef'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
		'rendering' rendering=[KRendering|EString]
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
    '}';

KStyle_Impl returns KStyle:
	propagateToChildren?='propagateToChildren'
	'KStyle'
;

KEllipse returns KEllipse:
	{KEllipse}
	'KEllipse'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KRectangle returns KRectangle:
	{KRectangle}
	'KRectangle'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KRoundedRectangle returns KRoundedRectangle:
	'KRoundedRectangle'
	'{'
		'cornerWidth' cornerWidth=EFloat
		'cornerHeight' cornerHeight=EFloat
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KPolyline_Impl returns KPolyline:
	{KPolyline}
	'KPolyline'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KPolygon returns KPolygon:
	{KPolygon}
	'KPolygon'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KImage returns KImage:
	'KImage'
	'{'
		'bundleName' bundleName=EString
		'imagePath' imagePath=EString
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KArc returns KArc:
	{KArc}
	'KArc'
	'{'
		('startAngle' startAngle=EFloat)?
		('arcAngle' arcAngle=EFloat)?
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KChildArea returns KChildArea:
	{KChildArea}
	'KChildArea'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
    '}';

KText returns KText:
	clip?='clip'
	'KText'
	'{'
		('text' text=EString)?
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KCustomRendering returns KCustomRendering:
	'KCustomRendering'
	'{'
		'className' className=EString
		'bundleName' bundleName=EString
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KSpline returns KSpline:
	{KSpline}
	'KSpline'
	'{'
		('references' '(' references+=[KRenderingRef|EString] ( "," references+=[KRenderingRef|EString])* ')' )?
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
		('placementData' placementData=KPlacementData)?
		('styles' '{' styles+=KStyle ( "," styles+=KStyle)* '}' )?
		('children' '{' children+=KRendering ( "," children+=KRendering)* '}' )?
		('childPlacement' childPlacement=KPlacement)?
    '}';

KDecoratorPlacementData returns KDecoratorPlacementData:
	relative?='relative'
	'KDecoratorPlacementData'
	'{'
		'location' location=EFloat
		('xOffset' xOffset=EFloat)?
		('yOffset' yOffset=EFloat)?
    '}';

KGridPlacementData returns KGridPlacementData:
	'KGridPlacementData'
	'{'
		'widthHint' widthHint=EFloat
		'heightHint' heightHint=EFloat
		'horizontalIndent' horizontalIndent=EFloat
		'verticalIndent' verticalIndent=EFloat
    '}';

KStackPlacementData returns KStackPlacementData:
	'KStackPlacementData'
	'{'
		'insetRight' insetRight=EFloat
		'insetBottom' insetBottom=EFloat
		'insetLeft' insetLeft=EFloat
		'insetTop' insetTop=EFloat
    '}';

KDirectPlacementData returns KDirectPlacementData:
	'KDirectPlacementData'
	'{'
		'topLeft' topLeft=KPosition
		'bottomRight' bottomRight=KPosition
    '}';

KPolylinePlacementData returns KPolylinePlacementData:
	'KPolylinePlacementData'
	'{'
		'points' '{' points+=KPosition ( "," points+=KPosition)* '}' 
    '}';

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

KPosition returns KPosition:
	'KPosition'
	'{'
		'x' x=KXPosition
		'y' y=KYPosition
    '}';

KLeftPosition returns KLeftPosition:
	{KLeftPosition}
	'KLeftPosition'
	'{'
		('absolute' absolute=EFloat)?
		('relative' relative=EFloat)?
    '}';

KRightPosition returns KRightPosition:
	{KRightPosition}
	'KRightPosition'
	'{'
		('absolute' absolute=EFloat)?
		('relative' relative=EFloat)?
    '}';

KTopPosition returns KTopPosition:
	{KTopPosition}
	'KTopPosition'
	'{'
		('absolute' absolute=EFloat)?
		('relative' relative=EFloat)?
    '}';

KBottomPosition returns KBottomPosition:
	{KBottomPosition}
	'KBottomPosition'
	'{'
		('absolute' absolute=EFloat)?
		('relative' relative=EFloat)?
    '}';

KForegroundColor returns KForegroundColor:
	propagateToChildren?='propagateToChildren'
	'KForegroundColor'
	'{'
		'red' red=EInt
		'green' green=EInt
		'blue' blue=EInt
    '}';

KBackgroundColor returns KBackgroundColor:
	propagateToChildren?='propagateToChildren'
	'KBackgroundColor'
	'{'
		'red' red=EInt
		'green' green=EInt
		'blue' blue=EInt
    '}';

KLineWidth returns KLineWidth:
	propagateToChildren?='propagateToChildren'
	'KLineWidth'
	'{'
		'lineWidth' lineWidth=EInt
    '}';

KVisibility returns KVisibility:
	propagateToChildren?='propagateToChildren'
	lineVisible?='lineVisible'
	filled?='filled'
	'KVisibility'
;

KLineStyle returns KLineStyle:
	propagateToChildren?='propagateToChildren'
	'KLineStyle'
	'{'
		'lineStyle' lineStyle=LineStyle
    '}';

KVerticalAlignment returns KVerticalAlignment:
	propagateToChildren?='propagateToChildren'
	'KVerticalAlignment'
	'{'
		'verticalAlignment' verticalAlignment=VerticalAlignment
    '}';

KHorizontalAlignment returns KHorizontalAlignment:
	propagateToChildren?='propagateToChildren'
	'KHorizontalAlignment'
	'{'
		'horizontalAlignment' horizontalAlignment=HorizontalAlignment
    '}';

EInt returns ecore::EInt:
	'-'? INT;

enum LineStyle returns LineStyle:
	SOLID = 'SOLID' | DASH = 'DASH' | DOT = 'DOT' | DASHDOT = 'DASHDOT' | DASHDOTDOT = 'DASHDOTDOT';

enum VerticalAlignment returns VerticalAlignment:
	TOP = 'TOP' | CENTER = 'CENTER' | BOTTOM = 'BOTTOM';

enum HorizontalAlignment returns HorizontalAlignment:
	LEFT = 'LEFT' | CENTER = 'CENTER' | RIGHT = 'RIGHT';

KGridPlacement returns KGridPlacement:
	'KGridPlacement'
	'{'
		'numColumns' numColumns=EInt
    '}';

KStackPlacement returns KStackPlacement:
	{KStackPlacement}
	'KStackPlacement'
;
