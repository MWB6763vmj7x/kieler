/*
 * KIELER - Kiel Integrated Environment for Layout Eclipse RichClient
 * 
 * http://www.informatik.uni-kiel.de/rtsys/kieler/
 * 
 * Copyright 2012 by
 * + Christian-Albrechts-University of Kiel
 *   + Department of Computer Science
 *     + Real-Time and Embedded Systems Group
 * 
 * This code is provided under the terms of the Eclipse Public License (EPL).
 * See the file epl-v10.html for the license text.
 */
grammar de.cau.cs.kieler.core.kgraph.text.KGraph with de.cau.cs.kieler.core.kgraph.text.krendering.KRendering 

import "http://kieler.cs.cau.de/KGraph"

KNode returns KNode:
//    {KNode}
//    'KNode'
//    '{'
//        ('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
//        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
//        ('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
//        ('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
//        ('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
//    '}';
    {KNode}
    'KNode'
    '{'
        ('ports' ':'? ports+=KPort ( ","? ports+=KPort)* )?
        ('data' ':'? data+=KGraphData ( ","? data+=KGraphData)* )?
        ('labels' ':'? labels+=KLabel ( ","? labels+=KLabel)* )?
        ('children' ':'? children+=KNode ( ","? children+=KNode)* )?
    '}'
    (outgoingEdges+=KEdge ( ","? outgoingEdges+=KEdge)*)?
    ;

KLabel returns KLabel:
//    'KLabel'
//    '{'
//        'text' text=EString
//        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//    '}';
    'KLabel' text=EString
    '{'
        ('data' ':'? data+=KGraphData ( ","? data+=KGraphData)* )?
    '}';

KPort returns KPort:
//    {KPort}
//    'KPort'
//    '{'
//        ('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
//        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
//    '}';
    {KPort}
    'KPort'
    '{'
        ('edges' ':'? edges+=[KEdge|EString] ( ","? edges+=[KEdge|EString])*)?
        ('data' ':'? data+=KGraphData ( ","? data+=KGraphData)*)?
        ('labels' ':'? labels+=KLabel ( ","? labels+=KLabel)*)?
    '}';

KEdge returns KEdge:
//    'KEdge'
//    '{'
//        'target' target=[KNode|EString]
//        ('sourcePort' sourcePort=[KPort|EString])?
//        ('targetPort' targetPort=[KPort|EString])?
//        ('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//        ('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
//    '}';

// TODO: In an advanced version of the textual KGraph language the fragment URI used to identify the
// edge's target and ports shall be parsed and decomposed by related parser rules.
    '-->' target=[KNode|EString]
    '{'
        ('sourcePort' sourcePort=[KPort|EString])?
        ('targetPort' targetPort=[KPort|EString])?
        ('data' ':'? data+=KGraphData ( ","? data+=KGraphData)*)?
        ('labels' ':'? labels+=KLabel ( ","? labels+=KLabel)*)?
    '}';

KGraphData returns KGraphData:
//    {KGraphData}
//    'KGraphData'
//    '{'
//        ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
//    '}';
    KRendering | KRenderingLibrary | KShapeLayout | KEdgeLayout | KGraphDataImpl;

KGraphDataImpl returns KGraphData:
  {KGraphData}
  'KGraphData'
  '{'
      ('mapProperties' ':'? '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
  '}';


//PersistentEntry returns PersistentEntry:
//    'PersistentEntry'
//    '{'
//        'key' key=EString
//        ('value' value=EString)?
//    '}';

//EString returns ecore::EString:
//    STRING | ID;
