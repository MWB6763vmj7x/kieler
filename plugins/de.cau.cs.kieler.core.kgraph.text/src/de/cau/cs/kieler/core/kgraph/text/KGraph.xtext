// automatically generated by Xtext
grammar de.cau.cs.kieler.core.kgraph.text.KGraph with de.cau.cs.kieler.core.krendering.text.KRendering 

import "platform:/resource/de.cau.cs.kieler.core.kgraph/model/kgraph.ecore" 
//import "http://kieler.cs.cau.de/KGraph"
import "platform:/resource/de.cau.cs.kieler.core.krendering/model/krendering.ecore" as krendering
//import "http://kieler.cs.cau.de/KRendering" as krendering
import "platform:/resource/de.cau.cs.kieler.kiml/model/klayoutdata.ecore" as klayoutdata 
//import "http://kieler.cs.cau.de/KLayoutData" as klayoutdata

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

KNode returns KNode:
	{KNode}
	'KNode'
	'{'
		('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
		('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
		('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
		('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
    '}';

// Error marker is a false positive; generation works anyway!
KGraphData returns KGraphData:
    KRendering | KShapeLayout | KEdgeLayout;

//KGraphData returns KGraphData:
//	{KGraphData}
//	'KGraphData'
//	'{'
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
//    '}';

KLabel returns KLabel:
	'KLabel'
	'{'
		'text' text=EString
		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
    '}';

KPort returns KPort:
	{KPort}
	'KPort'
	'{'
		('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
    '}';

KEdge returns KEdge:
	'KEdge'
	'{'
		'target' target=[KNode|EString]
		('sourcePort' sourcePort=[KPort|EString])?
		('targetPort' targetPort=[KPort|EString])?
		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
		('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
    '}';

//PersistentEntry returns PersistentEntry:
//	'PersistentEntry'
//	'{'
//		'key' key=EString
//		('value' value=EString)?
//    '}';

EString returns ecore::EString:
	STRING | ID;
