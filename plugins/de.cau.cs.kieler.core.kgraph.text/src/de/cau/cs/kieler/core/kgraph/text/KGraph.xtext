grammar de.cau.cs.kieler.core.kgraph.text.KGraph with de.cau.cs.kieler.core.krendering.text.KRendering 

//import "platform:/resource/de.cau.cs.kieler.core.kgraph/model/kgraph.ecore" 
import "http://kieler.cs.cau.de/KGraph"

import "http://kieler.cs.cau.de/KRendering" as krendering
import "http://kieler.cs.cau.de/KLayoutData" as klayoutdata
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

KNode returns KNode:
//	{KNode}
//	'KNode'
//	'{'
//		('incomingEdges' '(' incomingEdges+=[KEdge|EString] ( "," incomingEdges+=[KEdge|EString])* ')' )?
//		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//		('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
//		('children' '{' children+=KNode ( "," children+=KNode)* '}' )?
//		('ports' '{' ports+=KPort ( "," ports+=KPort)* '}' )?
//		('outgoingEdges' '{' outgoingEdges+=KEdge ( "," outgoingEdges+=KEdge)* '}' )?
//    '}';
	{KNode}
	'KNode'
	'{'
		('ports' ports+=KPort ( ","? ports+=KPort)* )?
		('data' ':'? data+=KGraphData ( ","? data+=KGraphData)* )?
		//('labels' '{' labels+=KLabel ( ","? labels+=KLabel)* '}' )?
		('children' ':'? children+=KNode ( ","? children+=KNode)* )?
    '}'
    (outgoingEdges+=KEdge ( ","? outgoingEdges+=KEdge)*)?
    ;

KLabel returns KLabel:
//	'KLabel'
//	'{'
//		'text' text=EString
//		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//    '}';
	'KLabel' text=EString
	'{'
		('data' ':'? data+=KGraphData ( ","? data+=KGraphData)* )?
    '}';

KPort returns KPort:
//	{KPort}
//	'KPort'
//	'{'
//		('edges' '(' edges+=[KEdge|EString] ( "," edges+=[KEdge|EString])* ')' )?
//		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//		('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
//    '}';
	{KPort}
	'KPort'
	'{'
		('edges' ':'? edges+=[KEdge|EString] ( ","? edges+=[KEdge|EString])*)?
		('data' ':'? data+=KGraphData ( ","? data+=KGraphData)*)?
		('labels' ':'? labels+=KLabel ( ","? labels+=KLabel)*)?
    '}';

KEdge returns KEdge:
//	'KEdge'
//	'{'
//		'target' target=[KNode|EString]
//		('sourcePort' sourcePort=[KPort|EString])?
//		('targetPort' targetPort=[KPort|EString])?
//		('data' '{' data+=KGraphData ( "," data+=KGraphData)* '}' )?
//		('labels' '{' labels+=KLabel ( "," labels+=KLabel)* '}' )?
//    '}';
	'-->' target=[KNode|EString]
	'{'
		('sourcePort' sourcePort=[KPort|EString])?
		('targetPort' targetPort=[KPort|EString])?
		('data' ':'? data+=KGraphData ( ","? data+=KGraphData)*)?
		('labels' ':'? labels+=KLabel ( ","? labels+=KLabel)*)?
    '}';

// Error marker is a false positive; generation works anyway!
//  It occurs if eSuperType references in krendering.ecore/klayoutdata.ecore
//  are like ../../de.cau.cs.kieler.core.kgraph/model/kgraph.ecore#//KGraphData
//  but should be platform:/resource/de.cau.cs.kieler.core.kgraph/model/kgraph.ecore#//KGraphData
//  since Xtext obviously compares concrete string representations of the fragmentURIs.
//  This is why packages are referred to the same way in the preamble.   
KGraphData returns KGraphData:
//	{KGraphData}
//	'KGraphData'
//	'{'
//		('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
//    '}';
    KRendering | KRenderingLibrary | KShapeLayout | KEdgeLayout | KGraphDataImpl;

KGraphDataImpl returns KGraphData:
  {KGraphData}
  'KGraphData'
  '{'
      ('persistentEntries' '{' persistentEntries+=PersistentEntry ( "," persistentEntries+=PersistentEntry)* '}' )?
  '}';


//PersistentEntry returns PersistentEntry:
//	'PersistentEntry'
//	'{'
//		'key' key=EString
//		('value' value=EString)?
//    '}';

//EString returns ecore::EString:
//	STRING | ID;
